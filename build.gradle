group 'com.github.angelndevil2'
version '0.0.2-SNAPSHOT'

apply plugin : 'java'
apply plugin: 'maven'
apply plugin: 'application'

sourceCompatibility = 1.6
mainClassName = "com.github.angelndevil2.loadt.Launcher"

startScripts {
    classpath = files("*")
}

configurations {
    runtime.exclude('module':'lombok')
    runtime.exclude('module':'log4j')
}

repositories {
    mavenCentral()
}

dependencies {

    compile (
            'ch.qos.logback:logback-classic:1.1.3',
            'org.apache.commons:commons-math3:3.6',
            'org.apache.commons:commons-pool2:2.4.2',
            'org.projectlombok:lombok:1.16.6',
            'com.tistory.devilnangel:system-info:0.0.1',
            'org.eclipse.jetty:jetty-server:8.1.18.v20150929',
            'org.slf4j:jcl-over-slf4j:1.7.16',
            'org.slf4j:log4j-over-slf4j:1.7.16',
            'com.googlecode.json-simple:json-simple:1.1.1'
    )
    compile ('log4j:log4j:1.2.17')
    compile ('org.apache.jmeter:ApacheJMeter:2.13') {
        exclude module: 'commons-math3'
        exclude module: 'commons-pool2'
        exclude module: 'commons-logging'
        exclude module: 'slf4j-nop'
        exclude module: 'servletapi'
    }
    compile ('org.apache.jmeter:ApacheJMeter_http:2.13') {
        exclude module: 'commons-math3'
        exclude module: 'commons-pool2'
        exclude module: 'commons-logging'
        exclude module: 'slf4j-nop'
        exclude module: 'servletapi'
    }

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.eclipse.jetty:jetty-client:8.1.18.v20150929'
}

compileJava.dependsOn { javaCodeGen }
clean.dependsOn { cleanGeneratedCode }

jar {

    manifest {
        attributes("Implementation-Title": project.group + ":" + project.name,
                "Implementation-Version": version,
                "Main-Class": "com.github.angelndevil2.loadt.Launcher"
        )
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// generate java source code
task javaCodeGen(type: Copy) {
    from 'src/templates'
    into "src/main/java/com/github/angelndevil2/loadt/common"
    include 'LoadTInformation.template'
    rename {file -> 'LoadTInformation.java'}
    expand(version:version)
}

task cleanGeneratedCode(type:Delete) {
    delete 'src/main/java/com/github/angelndevil2/loadt/common/LoadTInformation.java'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {

            repository(url: "file://localhost/"+System.properties['user.home']+"/.m2/repository/")
            pom.project {
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

// apply from: 'maven-push.gradle'

